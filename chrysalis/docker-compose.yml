#
# node-docker-setup __VERSION__
# https://github.com/iotaledger/node-docker-setup
#

version: '3'
services:

##################################################################
#  HORNET - Chysalis                                             #
##################################################################

  hornet:
    container_name: hornet
    image: iotaledger/hornet:1
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    stop_grace_period: 5m
    depends_on:
      traefik:
        condition: service_started
    ports:
      - "15600:15600/tcp"
      - "14626:14626/udp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hornet.service=hornet"
      - "traefik.http.routers.hornet.rule=Host(`${NODE_HOST:-localhost}`)"
      - "traefik.http.routers.hornet.entrypoints=web"
      - "traefik.http.services.hornet.loadbalancer.server.port=14265"
      - "traefik.http.routers.hornet.middlewares=redirect-dashboard"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.regex=^(https?://[^/]+)/?$$"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.replacement=$$1/dashboard/"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.permanent=true"
      - "traefik.http.routers.hornet-dashboard.service=hornet-dashboard"
      - "traefik.http.routers.hornet-dashboard.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/dashboard`) || PathPrefix(`/dashboard/`))"
      - "traefik.http.routers.hornet-dashboard.entrypoints=web"
      - "traefik.http.services.hornet-dashboard.loadbalancer.server.port=8081"
    cap_drop:
      - ALL
    volumes:
      - ./${HORNET_CONFIG_FILE:-config.json}:/app/config.json:ro
      - ./peering.json:/app/peering.json
      - ./data:/app/data
    command:
      - "-c"
      - "config.json"
      - "--db.path=data/database"
      - "--snapshots.fullPath=data/snapshots/full_snapshot.bin"
      - "--snapshots.deltaPath=data/snapshots/delta_snapshot.bin"
      - "--p2p.db.path=data/p2pstore"
      - "--p2p.bindMultiAddresses=/ip4/0.0.0.0/tcp/15600,/ip6/::/tcp/15600"
      - "--dashboard.bindAddress=hornet:8081"
      - "--dashboard.auth.username=${DASHBOARD_USERNAME:-admin}"
      - "--dashboard.auth.passwordHash=${DASHBOARD_PASSWORD:-0000000000000000000000000000000000000000000000000000000000000000}"
      - "--dashboard.auth.passwordSalt=${DASHBOARD_SALT:-0000000000000000000000000000000000000000000000000000000000000000}"
      - "--prometheus.bindAddress=hornet:9311"

##################################################################
#  Reverse Proxy and SSL                                         #
##################################################################

  traefik:
    container_name: traefik
    image: traefik:v2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--metrics.prometheus=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "${HTTP_PORT:-80}:80/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"

##################################################################
#  Monitoring                                                    #
##################################################################

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    user: "65532"
    volumes:
      - ./data/prometheus/:/prometheus
      - ./assets/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/localtime:/etc/localtime:ro
    profiles:
      - monitoring

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    command: 
      - --housekeeping_interval=30s    # kubernetes default args
      - --max_housekeeping_interval=35s
      - --event_storage_event_limit=default=0
      - --event_storage_age_limit=default=0
      - --store_container_labels=false
      - --global_housekeeping_interval=30s
      - --event_storage_event_limit=default=0
      - --event_storage_age_limit=default=0
      - --disable_metrics=accelerator,advtcp,cpu_topology,disk,hugetlb,memory_numa,percpu,referenced_memory,resctrl,sched,tcp,udp
      - --enable_load_reader=true
      - --docker_only=true          # only show stats for docker containers
      - --allow_dynamic_housekeeping=true
      - --storage_duration=1m0s
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    profiles:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "65532"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/grafana`) || PathPrefix(`/grafana/`))"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SERVER_ROOT_URL=/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=${NODE_HOST:-localhost}
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/node_dashboard.json
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./assets/grafana/:/etc/grafana/provisioning/
    profiles:
      - monitoring
